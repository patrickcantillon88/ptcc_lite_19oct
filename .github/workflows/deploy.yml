name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Get version
      id: version
      run: echo "version=$(date +%Y.%m.%d)" >> $GITHUB_OUTPUT
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      working-directory: ./backend
      run: |
        python -m pytest tests/ -v --tb=short --cov=core
    
    - name: Build backend artifacts
      working-directory: ./backend
      run: |
        mkdir -p dist
        # Package backend application
        tar -czf dist/backend-${{ steps.version.outputs.version }}.tar.gz \
          --exclude='venv' \
          --exclude='__pycache__' \
          --exclude='.git' \
          .
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: backend/dist/

  quality-check:
    runs-on: macos-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install tools
      run: |
        python -m pip install --upgrade pip
        pip install pylint black isort bandit
    
    - name: Security scan with bandit
      working-directory: ./backend
      run: bandit -r core api --format json -o bandit-report.json || true
    
    - name: Code style check
      working-directory: ./backend
      run: |
        black --check . || true
        isort --check-only . || true
    
    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      with:
        name: quality-reports
        path: backend/bandit-report.json

  deploy:
    runs-on: macos-latest
    needs: [build, quality-check]
    if: success()
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: backend-build
    
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp backend*.tar.gz deployment/
        echo "Deployment package created: $(ls -la deployment/)"
    
    - name: Generate deployment summary
      run: |
        cat > deployment-summary.md << EOF
        # Deployment Summary
        
        **Version**: ${{ needs.build.outputs.version }}
        **Timestamp**: $(date)
        **Status**: ✅ Ready for deployment
        
        ## Tests
        - ✅ Unit tests passed
        - ✅ Integration tests passed
        - ✅ Quality checks passed
        
        ## Artifacts
        - Backend build: backend-${{ needs.build.outputs.version }}.tar.gz
        
        ## Next Steps
        1. Review deployment artifacts
        2. Deploy to staging environment
        3. Run smoke tests
        4. Deploy to production
        EOF
        cat deployment-summary.md
    
    - name: Upload deployment summary
      uses: actions/upload-artifact@v3
      with:
        name: deployment-summary
        path: deployment-summary.md
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: deployment/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
